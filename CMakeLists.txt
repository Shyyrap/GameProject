cmake_minimum_required(VERSION 3.10)
project(Engine ${CMAKE_CXX_FLAGS})
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/cmake")
#SDL2
find_package(SDL2 REQUIRED) 
if(SDL2_FOUND)
    include_directories(${SDL2_INCLUDE_DIRS})
    message("SDL2 found in ${SDL2_INCLUDE_DIRS}")
    link_libraries(${SDL2_LIBRARIES})
endif()
#GLEW
find_package(GLEW REQUIRED)
if(GLEW_FOUND)
    include_directories(${GLEW_INCLUDE_DIRS})
    message("GLEW found in ${GLEW_INCLUDE_DIRS}")
    link_libraries(${GLEW_LIBRARIES})
endif()
#OpenGL 
find_package(OpenGL REQUIRED)
if(OpenGL_FOUND)
    include_directories(${OPENGL_INCLUDE_DIRS})
    message("OpenGL found in ${OPENGL_INCLUDE_DIRS}")
    link_libraries(${OPENGL_LIBRARIES})
endif()
#GLEW
find_package(glm REQUIRED)
if(glm_FOUND)
    include_directories(${GLM_INCLUDE_DIRS})
    link_libraries(${GLM_LIBRARIES})
    message("GLM FOUND!")
endif()
#Assimp
find_package(assimp REQUIRED)
if(assimp_FOUND)
    include_directories(${ASSIMP_INCLUDE_DIRS})
    link_libraries(${ASSIMP_LIBRARIES})
    message("Assimp FOUND! in ${ASSIMP_INCLUDE_DIR}")
endif()

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall")
file(GLOB 
    CPPS "source/*.cpp")
include_directories("headers/")
include_directories("Libs/")
include_directories("Libs/rapidjson-master/include/")
add_executable(${PROJECT_NAME} ${CPPS})
target_link_libraries(${PROJECT_NAME} ${ASSIMP_LIBRARIES} )
target_link_libraries(${PROJECT_NAME} ${SDL2_LIBRARIES} )
target_link_libraries(${PROJECT_NAME} ${GLM_LIBRARIES})
target_link_libraries(${PROJECT_NAME} ${GLEW_LIBRARIES} )
target_link_libraries(${PROJECT_NAME} ${OPENGL_LIBRARIES} )
target_link_libraries(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/Libs/soil-master/build/libsoil.a)
